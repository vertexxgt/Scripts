
previews:
  generation: automatic

services:
  - type: web
    runtime: ruby
    name: sinatra-app
    repo: https://github.com/render-examples/sinatra
    numInstances: 3
    region: frankfurt
    plan: standard
    branch: prod
    buildCommand: bundle install
    preDeployCommand: bundle exec ruby migrate.rb
    startCommand: bundle exec ruby main.rb
    autoDeployTrigger: off
    maxShutdownDelaySeconds: 120
    domains:
      - example.com
      - www.example.org
    envVars:
      - key: API_BASE_URL
        value: https://api.example.com
      - key: APP_SECRET
        generateValue: true
      - key: STRIPE_API_KEY
        sync: false
      - key: DATABASE_URL
        fromDatabase:
          name: mydatabase
          property: connectionString
      - key: MINIO_PASSWORD
        fromService:
          name: minio
          type: pserv
          envVarKey: MINIO_ROOT_PASSWORD
      - fromGroup: my-env-group

  - type: web
    runtime: docker
    name: webdis
    repo: https://github.com/render-examples/webdis.git
    rootDir: webdis
    dockerCommand: ./webdis.sh
    scaling:
      minInstances: 1
      maxInstances: 3
      targetMemoryPercent: 60
      targetCPUPercent: 60
    healthCheckPath: /
    registryCredential:
      fromRegistryCreds:
        name: my-credentials
    envVars:
      - key: REDIS_HOST
        fromService:
          type: keyvalue
          name: lightning
          property: host
      - key: REDIS_PORT
        fromService:
          type: keyvalue
          name: lightning
          property: port
      - fromGroup: conc-settings

  - type: pserv
    runtime: docker
    name: minio
    repo: https://github.com/render-examples/minio.git
    envVars:
      - key: MINIO_ROOT_PASSWORD
        generateValue: true
      - key: MINIO_ROOT_USER
        sync: false
      - key: PORT
        value: 10000
    disk:
      name: data
      mountPath: /data
      sizeGB: 10

  - type: cron
    name: date
    runtime: python
    schedule: '0 * * * *'
    buildCommand: 'true'
    startCommand: date
    repo: https://github.com/render-examples/docker.git

  - type: worker
    name: queue
    runtime: docker
    dockerfilePath: ./sub/Dockerfile
    dockerContext: ./sub/src
    branch: queue

  - type: web
    name: my-blog
    runtime: static
    buildCommand: yarn build
    staticPublishPath: ./build
    previews:
      generation: automatic
    buildFilter:
      paths:
        - src*.js
      ignoredPaths:
        - src*.test.js
    headers:
      - path: /*
        name: X-Frame-Options
        value: sameorigin
    routes:
      - type: redirect
        source: /old
        destination: /new
      - type: rewrite
        source: /a/*
        destination: /a

  - type: keyvalue
    name: lightning
    ipAllowList:
      - source: 0.0.0.0/0
        description: everywhere
    plan: free
    maxmemoryPolicy: noeviction

databases:
  - name: elephant
    databaseName: mydb
    user: adrian
    ipAllowList:
      - source: 203.0.113.4/30
        description: office
      - source: 198.51.100.1
        description: home
    readReplicas:
      - name: elephant-replica

  - name: private database
    databaseName: private
    ipAllowList: []

  - name: pachyderm
    plan: basic-1gb
    diskSizeGB: 35

  - name: highly available database
    plan: pro-8gb
    highAvailability:
      enabled: true

envVarGroups:
  - name: conc-settings
    envVars:
      - key: CONCURRENCY
        value: 2
      - key: SECRET
        generateValue: true
  - name: stripe
    envVars:
      - key: STRIPE_API_URL
        value: https://api.stripe.com/v2
